{"version":3,"sources":["../src/index.js"],"names":["DECREASE_VALUE","INCREASE_VALUE","NumberPicker","style","default","input","borderRadius","textAlign","buttonLeft","borderTopRightRadius","borderBottomRightRadius","margin","buttonRight","borderTopLeftRadius","borderBottomLeftRadius","circular","marginRight","marginLeft","handleAction","bind","validateInput","state","touched","buffer","event","actionFilter","currentTarget","name","currentValue","value","replace","setVal","_","isFinite","parseFloat","props","stepSize","step","min","max","parsedVal","lastChar","charAt","length","returnValue","precision","Math","floor","setTimeout","onChange","v","target","display","basic","compact","classname_outer_input","classname_button_minus","id","classname_inner_input","maxLength","placeholder","required","defaultValue","classname_button_plus","React","Component","propTypes","PropTypes","string","isRequired","any","func","number","bool"],"mappings":"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","file":"index.js","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport {\n    render\n} from 'react-dom'\nimport _ from \"lodash\";\nimport {\n    Button,\n    Form,\n    Input\n} from \"semantic-ui-react\";\n\n\nexport const DECREASE_VALUE = 'DECREASE_VALUE';\nexport const INCREASE_VALUE = 'INCREASE_VALUE';\n\n/*\n USAGE EXAMPLES:\n <Form.Field inline control={NumberPicker} name={MULTIPLY_INPUT + \".times\"} onChange={this.triggerChange} label=\"Copies to create\" defaultValue={1} min={1} max={999} placeholder=\"Repeat ...\" />\n <Form.Field width=\"8\" control={NumberPicker} compact label=\"compact buttons\" placeholder=\"Enter a number\" defaultValue={6} min={-41} max={45} step={1} />\n <Form.Field width=\"8\" control={NumberPicker} circular label=\"circular buttons\" placeholder=\"Enter a number\" defaultValue={6} min={-41} max={45} step={1} />\n <Form.Field width=\"8\" control={NumberPicker} basic label=\"basic buttons\" placeholder=\"Enter a number\" defaultValue={4} min={-40} max={40} step={2} />\n\n*/\n\n\nclass NumberPicker extends React.Component {\n\n    constructor() {\n        super();\n        this.style = {\n            default: {\n                input: {\n                    borderRadius: \"0px\",\n                    textAlign: \"right\"\n                },\n                buttonLeft: {\n                    borderTopRightRadius: \"0px\",\n                    borderBottomRightRadius: \"0px\",\n                    margin: \"0px\"\n                },\n                buttonRight: {\n                    borderTopLeftRadius: \"0px\",\n                    borderBottomLeftRadius: \"0px\",\n                }\n            },\n            circular: {\n                input: {\n                    textAlign: \"right\"\n                },\n                buttonLeft: {\n                    marginRight: \"3.5px\"\n                },\n                buttonRight: {\n                    marginLeft: \"3.5px\"\n                }\n            }\n\n        };\n        this.handleAction = this.handleAction.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n\n        this.state = {\n            touched: false,\n            buffer: {}\n        };\n\n    }\n\n    static get defaultProps() {\n        return {\n            placeholder: \"Enter a number\",\n            id: \"\",\n            /*\n             Limiting min, max value to 1e10 to prevent javascript to switch into scientific notation\n             */\n            min: 1e10 * -1,\n            max: 1e10,\n            maxLength: 10,\n            step: 1,\n            required: false,\n            basic: false,\n            circular: false,\n            compact: false,\n            classname_button_minus: \"number_picker_button_minus\",\n            classname_button_plus: \"number_picker_button_plus\",\n            classname_outer_input: \"number_picker\",\n            classname_inner_input: \"number_picker_input\"\n        };\n    }\n\n\n\n    handleAction(event) {\n        let actionFilter = event.currentTarget.name;\n        let currentValue = event.currentTarget.value.replace(\",\", \".\").replace(/\\D/g, '');\n\n        var setVal = (_.isFinite(parseFloat(this.props.value))) ? parseFloat(this.props.value) : null;\n        let stepSize = (_.isFinite(parseFloat(this.props.step))) ? parseFloat(this.props.step) : 1;\n        switch (actionFilter) {\n            case DECREASE_VALUE:\n                if (this.props.value - stepSize >= this.props.min)\n                    setVal -= stepSize;\n                else\n                    setVal = this.props.min;\n\n                break;\n            case INCREASE_VALUE:\n                if (setVal + stepSize <= this.props.max)\n                    setVal += stepSize;\n                else\n                    setVal = this.props.max;\n\n                break;\n            default:\n                let parsedVal = parseFloat(currentValue);\n                if (currentValue === \"-\")\n                    this.state.buffer = \"-\";\n\n                if (!(parsedVal > this.props.max || parsedVal < this.props.min)) {\n                    setVal = currentValue;\n                }\n\n                break;\n        }\n\n\n        let lastChar = (\"\" + setVal).charAt(setVal.length - 1) || \"\";\n        let returnValue = setVal;\n        let precision = 1000;\n        if (_.isFinite(parseFloat(setVal)))\n            returnValue = Math.floor(parseFloat(setVal) * precision) / precision;\n\n        if (setVal === \"\" || setVal === \"-\" || lastChar === \".\" || lastChar === \",\")\n            returnValue = setVal;\n\n        setTimeout(this.props.onChange, 1, {\n            name: this.props.name,\n            value: returnValue\n        });\n    }\n\n    validateInput(event, v) {\n        let actionFilter = event.target.name;\n        let currentValue = event.target.value;\n\n        var setVal = this.props.value;\n        switch (actionFilter) {\n            case this.props.name:\n                let parsedVal = parseFloat(currentValue);\n                setVal = (_.isFinite(parsedVal)) ? parsedVal : null;\n\n                if (parsedVal > this.props.max)\n                    setVal = this.props.max;\n                break;\n\n            case DECREASE_VALUE:\n            case INCREASE_VALUE:\n            default:\n                break;\n        }\n    }\n\n    render() {\n        var style = (this.props.circular) ? this.style.circular : this.style.default;\n        var display = {\n            circular: this.props.circular,\n            basic: this.props.basic,\n            compact: this.props.compact\n        };\n        return (<\n                Input className={\n                this.props.classname_outer_input\n            }>\n                <\n                    Button {...display\n                           }\n                           type=\"button\"\n                           icon='minus'\n                           onClick={\n                               this.handleAction\n                           }\n                           name={\n                               DECREASE_VALUE\n                           }\n                           style={\n                               style.buttonLeft\n                           }\n                           disabled={\n                               (this.props.value <= this.props.min)\n                           }\n                           className={\n                               this.props.classname_button_minus\n                           }\n                /> <\n                input type=\"text\"\n                      name={\n                          this.props.name\n                      }\n                      id={\n                          this.props.id\n                      }\n                      min={\n                          this.props.min\n                      }\n                      max={\n                          this.props.max\n                      }\n                      step={\n                          this.props.step\n                      }\n                      className={\n                          this.props.classname_inner_input\n                      }\n                      maxLength={\n                          this.props.maxLength\n                      }\n                      placeholder={\n                          this.props.placeholder\n                      }\n                      required={\n                          this.props.required\n                      }\n                      defaultValue={this.props.defaultValue}\n\n                      value={\n                          this.props.value\n                      }\n                      onChange={\n                          this.handleAction\n                      }\n                      onBlur={\n                          this.validateInput\n                      }\n                      style={\n                          style.input\n                      }\n            /> <\n                Button {...display\n                       }\n                       type=\"button\"\n                       icon='plus'\n                       onClick={\n                           this.handleAction\n                       }\n                       name={\n                           INCREASE_VALUE\n                       }\n                       style={\n                           style.buttonRight\n                       }\n                       disabled={\n                           (this.props.value >= this.props.max)\n                       }\n                       className={\n                           this.props.classname_button_plus\n                       }\n            /> </Input>\n        );\n    }\n}\n\nNumberPicker.propTypes = {\n    name: React.PropTypes.string.isRequired,\n    id: React.PropTypes.string,\n    value: React.PropTypes.any,\n    defaultValue: React.PropTypes.any,\n    onChange: React.PropTypes.func.isRequired,\n    placeholder: React.PropTypes.string,\n    min: React.PropTypes.number,\n    max: React.PropTypes.number,\n    step: React.PropTypes.number,\n    maxLength: React.PropTypes.number,\n    required: React.PropTypes.bool,\n    basic: React.PropTypes.bool,\n    circular: React.PropTypes.bool,\n    compact: React.PropTypes.bool\n};\n\nexport default NumberPicker;"]}